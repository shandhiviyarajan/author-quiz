{"version":3,"sources":["Header.jsx","Footer.jsx","Book.jsx","Main.jsx","Button.jsx","AuthorQuiz.jsx","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Footer","Book","_ref","title","Main","author","books","src","imageUrl","alt","name","map","key","src_Book","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","counter","text","React","Component","AuthorQuiz","data","src_Header","src_Button","value","src_Main","src_Footer","Boolean","window","location","hostname","match","authors","ReactDOM","render","src_AuthorQuiz","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yJAkBeA,SAhBA,WACX,OAAQC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBACtBH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,+BCOLE,EAZA,WAEX,OACIJ,EAAAC,EAAAC,cAAA,iPCKOG,EARF,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACZ,OACIP,EAAAC,EAAAC,cAAA,WACKK,ICsBEC,EAxBF,SAAAF,GAAuB,IAApBG,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,MACpB,OAAQV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKS,IAAKF,EAAOG,SAAUC,IAAI,KAC/Bb,EAAAC,EAAAC,cAAA,SACKO,EAAOK,OAGhBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UACKQ,EAAMK,IAAI,SAACR,GAAD,OAAWP,EAAAC,EAAAC,cAAA,MAAIc,IAAKT,GAAOP,EAAAC,EAAAC,cAACe,EAAD,CAAMV,MAAOA,EAAOS,IAAKT,+CCMpEW,cAjBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,QAAS,GAHER,wEASf,OAEIpB,EAAAC,EAAAC,cAACgB,EAAD,KAASK,KAAKJ,MAAMU,aAbXC,IAAMC,WCmBZC,EAdI,SAAA1B,GAAc,IAAX2B,EAAW3B,EAAX2B,KACpB,OACEjC,EAAAC,EAAAC,cAAA,WAASC,UAAU,mBACjBH,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,MAAM,gBACdpC,EAAAC,EAAAC,cAACmC,EAASJ,IAEZjC,EAAAC,EAAAC,cAACoC,EAAD,QCJcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAAMC,EAAU,CAAC,CACb9B,KAAM,oBACNF,SAAU,gBACVF,MAAO,CAAC,QAAS,QAAS,QAAS,UAGvC,CACII,KAAM,oBACNF,SAAU,gBACVF,MAAO,CAAC,QAAS,QAAS,QAAS,UAGvC,CACII,KAAM,oBACNF,SAAU,gBACVF,MAAO,CAAC,QAAS,QAAS,QAAS,WAKjCiB,EAAQ,CACVM,KAAM,CACFxB,OAAQmC,EAAQ,GAChBlC,MAAOkC,EAAQ,GAAGlC,QAK1BmC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAepB,GAAWqB,SAASC,eAAe,SD+F7D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.10cefcfe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (<header className=\"border-bottom p-2\">\n        < div className=\"container\" >\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h1>\n                        Author Quiz\n        </h1>\n\n                </div>\n            </div>\n        </div >\n    </header>)\n\n}\n\nexport default Header;\n\n\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <footer>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab,\n            officia placeat eaque consequuntur quaerat et. Exercitationem rerum, ea\n            alias possimus earum atque corrupti voluptates quam\n            consequatur dolor fugiat eveniet et.\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nconst Book = ({ title }) => {\n    return (\n        <div>\n            {title}\n        </div>\n    )\n}\n\nexport default Book;","import React from 'react';\nimport Book from './Book';\n\nconst Main = ({ author, books }) => {\n    return (<div className=\"container\">\n\n        <div className=\"row\">\n\n            <div className=\"col-md-4\">\n                <img src={author.imageUrl} alt=\"\" />\n                <p>\n                    {author.name}\n                </p>\n            </div>\n            <div className=\"col-md-8\">\n                <ul>\n                    {books.map((title) => <li key={title}><Book title={title} key={title} /></li>)}\n                </ul>\n\n            </div>\n        </div>\n    </div>)\n\n}\n\n\n\nexport default Main;","import React from 'react';\n\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            counter: 0\n        }\n    }\n\n\n    render() {\n        return (\n\n            <Button>{this.props.text}</Button>\n\n        )\n    }\n}\n\nexport default Button;","import React from 'react';\nimport './css/app.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\n\nimport Button from './Button';\n\nconst AuthorQuiz = ({ data }) => {\n  return (\n    <section className=\"author-quiz-app\" >\n      <Header />\n      <main>\n        <Button value=\"Check count\" />\n        <Main {...data} />\n      </main>\n      <Footer />\n    </section>\n  );\n\n}\n\nexport default AuthorQuiz;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst authors = [{\n    name: 'Shan Dhiviyarajan',\n    imageUrl: '/images/1.jpg',\n    books: ['Book1', 'Book2', 'Book3', 'Book4']\n},\n\n{\n    name: 'Ushani Ramanayake',\n    imageUrl: '/images/2.jpg',\n    books: ['Book1', 'Book2', 'Book3', 'Book4']\n},\n\n{\n    name: 'Vipula Anandapiya',\n    imageUrl: '/images/3.jpg',\n    books: ['Book1', 'Book2', 'Book3', 'Book4']\n}\n\n];\n\nconst state = {\n    data: {\n        author: authors[0],\n        books: authors[0].books\n    }\n}\n\n\nReactDOM.render(<AuthorQuiz {...state} />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}